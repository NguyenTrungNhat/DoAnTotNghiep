@using MobileShop.Core.Repositories.IRepository
@inject IUnitOfWork unitOfWork
@{
    var category = await unitOfWork.CategoryRepository.GetAllAsync();
}
<style>
        .dropbtn {
            cursor: pointer;
                }
        .dropdown {
            position: relative;
            display: inline-block;
                    }

        .dropdown-content {
            display: none;
            position: absolute;
            background-color: #f1f1f1;
            min-width: 160px;
            overflow: auto;
            box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
            z-index: 1;
                            }
        .dropdown-content a {
            color: black;
            padding: 12px 16px;
            text-decoration: none;
            display: block;
                            }

        .dropdown-content a:hover {background-color: #ddd;}
        
        .show {display: block;}

</style>

<li class="nav-item dropdown">
        <a onclick="myFunction()" class="nav-link dropbtn" >Danh mục</a>
         <div id="myDropdown" class="dropdown-menu dropdown-content">
             <a class="dropdown-item" href="/Product/">Tất cả sản phẩm</a>
        @foreach (var item in category)
        {
            <a class="dropdown-item" href="/Product/ProductByCategory/@item.CategoryId">@item.CategoryName</a>
        }
         </div>
</li>

<script>

    function myFunction() {
      document.getElementById("myDropdown").classList.toggle("show");
    }
    
    // Close the dropdown if the user clicks outside of it
    window.onclick = function(event) {
      if (!event.target.matches('.dropbtn')) {
        var dropdowns = document.getElementsByClassName("dropdown-content");
        var i;
        for (i = 0; i < dropdowns.length; i++) {
          var openDropdown = dropdowns[i];
          if (openDropdown.classList.contains('show')) {
            openDropdown.classList.remove('show');
          }
        }
      }
    }
</script>
